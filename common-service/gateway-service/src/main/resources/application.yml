server:
  port: 8050

spring:
  application:
    name: gateway-service
  profiles:
    active: dev
  cloud:
    gateway:
      #具体的路由信息，是一个数组
      routes:
      #路由的唯一id，不定义的话为一个uuid
      - id: consume-service-${random.value}
        #http请求为lb://前缀 + 服务id；ws请求为lb:ws://前缀 + 服务id；表示将请求负载到哪一个服务上
        uri: lb://consume-service
        #表示这个路由的请求匹配规则，只有符合这个规则的请求才会走这个路由。为一个数组，每个规则为并且的关系
        predicates:
        - Path=/consume-service/**
        #请求转发前的filter，为一个数组
        filters:
        #URI 截取，/consume-service/consume，StripPrefix=1 则截取结果为 /consume
        - StripPrefix=1
    sentinel:
      transport:
        dashboard: 1.117.200.16:8888  # 控制台服务地址（这里配置的是外网地址，实际客户端和服务台部署在同一网络，通过内网访问）
        clientIp: 120.41.145.210  # 客户端IP（这里配置的是外网IP，因为控制台也是配置外网地址，客户端和控制台需要互通。如果都部署在同一网络，则不需要配置，默认通过内网访问即可）
      eager: true #服务注启动，直接注册到dashboard
      datasource:
        ds:
          nacos:
            server-addr: 1.117.200.16:8848
            dataId: ${spring.application.name}-sentinel.json
            namespace: ${spring.profiles.active}
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow
